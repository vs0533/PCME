// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PCME.Infrastructure;
using System;

namespace PCME.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180403044758_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PCME.Domain.AggregatesModel.StudentAggregates.Sex", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.StudentAggregates.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<decimal>("Balance");

                    b.Property<DateTime?>("BirthDay");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailIsValid");

                    b.Property<string>("GraduationSchool");

                    b.Property<string>("IDCard");

                    b.Property<string>("Name");

                    b.Property<string>("OfficeName");

                    b.Property<string>("Password");

                    b.Property<string>("Photo");

                    b.Property<bool>("PhotoIsValid");

                    b.Property<int?>("SexId");

                    b.Property<string>("Specialty");

                    b.Property<int?>("TypeId");

                    b.Property<DateTime?>("WorkDate");

                    b.HasKey("Id");

                    b.HasIndex("SexId");

                    b.HasIndex("TypeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.StudentAggregates.StudentType", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("StudentType");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.UnitAggregates.WorkUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Email");

                    b.Property<int>("Level");

                    b.Property<string>("LinkMan");

                    b.Property<string>("LinkPhone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PID");

                    b.Property<int?>("ParentId");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("WorkUnitNatureId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("WorkUnitNatureId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.UnitAggregates.WorkUnitNature", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("UnitNature");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.StudentAggregates.Student", b =>
                {
                    b.HasOne("PCME.Domain.AggregatesModel.StudentAggregates.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId");

                    b.HasOne("PCME.Domain.AggregatesModel.StudentAggregates.StudentType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("PCME.Domain.AggregatesModel.UnitAggregates.WorkUnit", b =>
                {
                    b.HasOne("PCME.Domain.AggregatesModel.UnitAggregates.WorkUnit", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");

                    b.HasOne("PCME.Domain.AggregatesModel.UnitAggregates.WorkUnitNature", "UnitNature")
                        .WithMany()
                        .HasForeignKey("WorkUnitNatureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
